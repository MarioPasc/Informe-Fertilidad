# Vamos a centrar todas las figuras y a dejarlas a un tamaño más cómodo
knitr::opts_chunk$set(fig.align='center', fig.width=6, fig.height=4, out.width='70%')
X <- c(0,1,1,1,2,2,3,3,4,4,5,5)
Y <- c(0.69,0,0.69,1.38,0,0.69,0.69,1.38,0,1.09,0.69,1.09)
# Paso 1: Transformar los datos
ln_y <- log(y)
X <- c(0,1,1,1,2,2,3,3,4,4,5,5)
Y <- c(0.69,0,0.69,1.38,0,0.69,0.69,1.38,0,1.09,0.69,1.09)
# Paso 1: Transformar los datos
ln_y <- log(Y)
# Paso 2: Realizar una regresión lineal
modelo <- lm(ln_y ~ X)
# Tus datos
X <- c(0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5)
Y <- c(0.69, 0, 0.69, 1.38, 0, 0.69, 0.69, 1.38, 0, 1.09, 0.69, 1.09)
# Ajustar un modelo no lineal
modelo_nls <- nls(Y ~ a * b^X,
start = list(a = 1, b = 1), # Puntos de inicio para los parámetros a y b
data = data.frame(X, Y))
# Ver los resultados del ajuste
summary(modelo_nls)
# Obtener los coeficientes estimados
coeficientes <- coef(modelo_nls)
a_estimado <- coeficientes["a"]
b_estimado <- coeficientes["b"]
cat("a estimado:", a_estimado, "\nb estimado:", b_estimado, "\n")
X*Y
sum(X*Y)
sum(X*Y) / length(X)
mean(X)
sum(X*Y) / length(X) -mean(X) * mean(Y)
(sum(X*Y) / length(X) -mean(X) * mean(Y) ) / 2.85
cat("a estimado:", a_estimado, "\nb estimado:", b_estimado, "\n")
sd(X)
sd(X)^2
(sum(X*Y) / length(X) -mean(X) * mean(Y) ) / 2.81
ln((sum(X*Y) / length(X) -mean(X) * mean(Y) ) / 2.81)
log((sum(X*Y) / length(X) -mean(X) * mean(Y) ) / 2.81)
# Crear la matriz
matriz <- matrix(c(4, 1, 0, 0, 0,
8, 10, 8, 6, 0,
1, 6, 20, 14, 3,
0, 3, 13, 13, 6,
0, 0, 1, 0, 3),
nrow = 5,       # Número de filas
byrow = TRUE)   # Llenar la matriz por filas
# Mostrar la matriz
print(matriz)
matriz[0, 2]
matriz / 8
# Crear la matriz
matriz <- matrix(c(4, 1, 0, 0, 0,
8, 10, 8, 6, 0,
1, 6, 20, 14, 3,
0, 3, 13, 13, 6,
0, 0, 1, 0, 3),
nrow = 5,       # Número de filas
byrow = FALSE
)   # Llenar la matriz por filas
# Crear la matriz
matriz <- matrix(c(4, 1, 0, 0, 0,
8, 10, 8, 6, 0,
1, 6, 20, 14, 3,
0, 3, 13, 13, 6,
0, 0, 1, 0, 3),
nrow = 5,       # Número de filas
byrow = FALSE
)   # Llenar la matriz por filas
matriz / 8
matriz <- matriz / 8
matriz
sum(matriz)
sum(matriz[, 1])
sum(matriz[1, ])
sum(matriz[2, ])
sum(matriz[3, ])
sum(matriz[4, ])
library(rentrez)
install.packages("rentrez")
library(rentrez)
```{r, warning=FALSE}
library(rentrez)
entrez_db_searchable("protein")
search_p53 <- entrez_search(db = "protein",
term = "p53[PROT] AND Homo Sapiens[ORGN]")
summary(search_p53)
print(paste("Número de ID proteínas p53: ", search_p53$count, sep =" "))
search_p53 <- entrez_search(db = "protein",
term = "p53[PROT] AND Homo Sapiens[ORGN]",
retmax = 61)
print(paste("Número de ID proteínas p53: ", search_p53$count, sep =" "))
entrez_summary(db = "protein",
id = search_p53$ids[1])
entrez_summary(db = "protein",
id = search_p53$ids[1])$term
entrez_summary(db = "protein",
id = search_p53$ids[1])
entrez_summary(db = "protein",
id = search_p53$ids[1])$subname
entrez_summary(db = "protein",
id = search_p53$ids[1])
entrez_summary(db = "protein",
id = search_p53$ids[1])$title
entrez_summary(db = "protein",
id = search_p53$ids[1])
entrez_summary(db = "protein",
id = search_p53$ids[1])$gi
search_p53$ids
entrez_summary(db = "protein",
id = 2591774563)
entrez_summary(db = "protein",
id = 2591774563)%uid
entrez_summary(db = "protein",
id = 2591774563)$uid
entrez_summary(db = "protein",
id = 2591774563)
entrez_summary(db = "protein",
id = 2591774563)$caption
entrez_summary(db = "protein",
id = 2591774563)
entrez_summary(db = "protein",
id = 2591774563)$title
id_p53 <- search_p53$ids[sapply(search_p53$ids, function(id) { "p53, partial [Homo sapiens]" == entrez_summary(db = "protein", id = id)$name })]
id_p53 <- search_p53$ids[sapply(search_p53$ids, function(id) { "p53, partial [Homo sapiens]" == entrez_summary(db = "protein", id = id)$title })]
id_p53
search_p53 <- entrez_search(db = "protein",
term = "p53[PROT] AND Homo Sapiens[ORGN]",
retmax = 61)
print(paste("Número de ID proteínas p53: ", search_p53$count, sep =" "))
id_p53 <- search_p53$ids[sapply(search_p53$ids, function(id) { "p53" == entrez_summary(db = "protein", id = id)$title })]
id_p53
id_p53
search_p53 <- entrez_search(db="protein", term="p53[PROT] AND Homo sapiens[ORGN]", retmax=100)
print(paste("Número de ID proteínas p53: ", search_p53$count))
# Opción más eficiente sería revisar un subconjunto de IDs y sus títulos
summaries <- entrez_summary(db="protein", id=search_p53$ids[1:min(length(search_p53$ids), 10)])
# Filtrar basado en una comprobación menos estricta o análisis de los resúmenes obtenidos
id_p53 <- sapply(summaries, function(s) ifelse(grepl("p53", s$title) && grepl("Homo sapiens", s$title), s$uid, NA))
id_p53 <- id_p53[!is.na(id_p53)]
id_p53
id_p53 <- summaries[1]
id_p53 <- summaries$2591774563
id_p53 <- summaries$"2591774563"
id_p53 <- summaries$"2591774563"$uid
id_p53
search_3D <- entrez_links(dbfrom = "protein",
db = "structure",
id = id_p53)
search_3D <- entrez_link(dbfrom = "protein",
db = "structure",
id = id_p53)
search_3d
search_3D
summary(search_3D)
summary(search_3D)
search_3D[1]
summary(search_3D)
search_3D$elink
summary(search_3D)
search_3D$links
search_p53 <- entrez_search(db="protein", term="p53[Protein Name] AND Homo sapiens[Organism]")
id_p53 <- search_p53$ids[1]
search_3D <- entrez_link(dbfrom = "protein",
db = "structure",
id = id_p53)
search_3D$links$
```
search_3D$links
search_3D$links$protein_structure
links_structure <- entrez_link(dbfrom="protein", db="structure", id=search_p53$ids[1])
structure_ids <- links_structure$links$protein_structure
summary_structure <- entrez_summary(db="structure", id=structure_ids[1])
links_structure <- entrez_link(dbfrom="protein", db="structure", id=id_p53)
structure_ids <- links_structure$links$protein_structure
summary_structure <- entrez_summary(db="structure", id=structure_ids[1])
setwd("~/Proyectos R/Entrega-Fertilidad-MinDat")
